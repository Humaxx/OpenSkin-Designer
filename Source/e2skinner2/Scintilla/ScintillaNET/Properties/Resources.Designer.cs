//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScintillaNET.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ScintillaNET.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DeleteHS {
            get {
                object obj = ResourceManager.GetObject("DeleteHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot create the Scintilla direct function. ähnelt.
        /// </summary>
        internal static string Exception_CannotCreateDirectFunction {
            get {
                return ResourceManager.GetString("Exception_CannotCreateDirectFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot create the Scintilla direct pointer. ähnelt.
        /// </summary>
        internal static string Exception_CannotCreateDirectPointer {
            get {
                return ResourceManager.GetString("Exception_CannotCreateDirectPointer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot load the &apos;{0}&apos; module into memory. ähnelt.
        /// </summary>
        internal static string Exception_CannotLoadModule {
            get {
                return ResourceManager.GetString("Exception_CannotLoadModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &apos;{0}&apos; argument cannot be an empty string. ähnelt.
        /// </summary>
        internal static string Exception_EmptyStringArgument {
            get {
                return ResourceManager.GetString("Exception_EmptyStringArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enumeration already finished. ähnelt.
        /// </summary>
        internal static string Exception_EnumeratorEnded {
            get {
                return ResourceManager.GetString("Exception_EnumeratorEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enumeration has not started. Call MoveNext. ähnelt.
        /// </summary>
        internal static string Exception_EnumeratorNotStarted {
            get {
                return ResourceManager.GetString("Exception_EnumeratorNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cross-thread operation not valid: Control &apos;{0}&apos; accessed from a thread other than the thread it was created on. ähnelt.
        /// </summary>
        internal static string Exception_IllegalCrossThreadCall {
            get {
                return ResourceManager.GetString("Exception_IllegalCrossThreadCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index was out of range. Must be non-negative and less than the size of the collection. ähnelt.
        /// </summary>
        internal static string Exception_IndexOutOfRange {
            get {
                return ResourceManager.GetString("Exception_IndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index was out of range. Must be non-negative and less than or equal to MaxIndex. ähnelt.
        /// </summary>
        internal static string Exception_IndexOutOfRangeMaxIndex {
            get {
                return ResourceManager.GetString("Exception_IndexOutOfRangeMaxIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insufficient space in the target location to copy the information. ähnelt.
        /// </summary>
        internal static string Exception_InsufficientSpace {
            get {
                return ResourceManager.GetString("Exception_InsufficientSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A change in the control who created this annotation has rendered the object invalid. ähnelt.
        /// </summary>
        internal static string Exception_InvalidAnnotation {
            get {
                return ResourceManager.GetString("Exception_InvalidAnnotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The {0} line must specify a valid line within the document. ähnelt.
        /// </summary>
        internal static string Exception_InvalidLine {
            get {
                return ResourceManager.GetString("Exception_InvalidLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The start line and end line must specify a valid range. ähnelt.
        /// </summary>
        internal static string Exception_InvalidLineRange {
            get {
                return ResourceManager.GetString("Exception_InvalidLineRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The start line must be greater than or equal to zero. ähnelt.
        /// </summary>
        internal static string Exception_InvalidStartLine {
            get {
                return ResourceManager.GetString("Exception_InvalidStartLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The module name must be set before any Scintilla object are created. ähnelt.
        /// </summary>
        internal static string Exception_ModuleAlreadyLoaded {
            get {
                return ResourceManager.GetString("Exception_ModuleAlreadyLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only ASCII characters are permitted. ähnelt.
        /// </summary>
        internal static string Exception_MustBeASCII {
            get {
                return ResourceManager.GetString("Exception_MustBeASCII", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; was out of range. Must be non-negative and less than {1}. ähnelt.
        /// </summary>
        internal static string Exception_MustBeNonNegativeAndLessThan {
            get {
                return ResourceManager.GetString("Exception_MustBeNonNegativeAndLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value must be between {0} and {1}. ähnelt.
        /// </summary>
        internal static string Exception_OutOfRange {
            get {
                return ResourceManager.GetString("Exception_OutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transparent colors are not supported. ähnelt.
        /// </summary>
        internal static string Exception_TransparentColor {
            get {
                return ResourceManager.GetString("Exception_TransparentColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The specified encoding is not supported. ähnelt.
        /// </summary>
        internal static string Exception_UnsupportedEncoding {
            get {
                return ResourceManager.GetString("Exception_UnsupportedEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap GoToNextMessage {
            get {
                object obj = ResourceManager.GetObject("GoToNextMessage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap GoToPreviousMessage {
            get {
                object obj = ResourceManager.GetObject("GoToPreviousMessage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap LineColorHS {
            get {
                object obj = ResourceManager.GetObject("LineColorHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SciLexer.dll ähnelt.
        /// </summary>
        internal static string ModuleName {
            get {
                return ResourceManager.GetString("ModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SciLexer64.dll ähnelt.
        /// </summary>
        internal static string ModuleName64 {
            get {
                return ResourceManager.GetString("ModuleName64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        internal static byte[] SciLexer {
            get {
                object obj = ResourceManager.GetObject("SciLexer", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        internal static byte[] SciLexer64 {
            get {
                object obj = ResourceManager.GetObject("SciLexer64", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
